!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);var o=function(){var e=this;this.segments=[],this.moving=!1,this.orientation="horizontal",this.dx=10,this.dy=0,this.createBabySnake=function(){e.segments.push([30,10]),e.segments.push([20,10]),e.segments.push([10,10]),e.moving=!0},this.move=function(){var t=e.segments[0].map((function(e){return e}));"horizontal"===e.orientation?t[0]+=e.dx:"vertical"===e.orientation&&(t[1]+=e.dy),e.segments.unshift(t),e.segments=e.segments.slice(0,-1)},this.checkCollision=function(){var t=e.segments[0];(t[0]<-10||t[0]>490||t[1]>490||t[1]<-10)&&(e.moving=!1)},this.changeOrientation=function(t){switch(t.code){case"ArrowRight":0===e.dx&&(e.dx=10,e.dy=0,e.orientation="horizontal");break;case"ArrowLeft":0===e.dx&&(e.dx=-10,e.dy=0,e.orientation="horizontal");break;case"ArrowDown":0===e.dy&&(e.dx=0,e.dy=10,e.orientation="vertical");break;case"ArrowUp":0===e.dy&&(e.dx=0,e.dy=-10,e.orientation="vertical")}console.log(e.dx,e.dy)},this.growSnake=function(){}},r=function(){var e=this;this.x=Math.floor(461*Math.random())+20,this.y=Math.floor(461*Math.random())+20,this.createNewFood=function(){e.x=Math.floor(461*Math.random())+20,e.y=Math.floor(461*Math.random())+20}};console.log("JAMES");var i=function(){document.addEventListener("keyup",u.changeOrientation),u.move(),c(),a(u.segments),u.checkCollision(),!1===u.moving&&s()},a=function(e){var t=document.querySelector(".game-container");e.forEach((function(e){var n=document.createElement("div");n.classList.add("snake-segment"),n.style.left=e[0]+"px",n.style.top=e[1]+"px",t.appendChild(n)}))},c=function(){var e=document.querySelectorAll(".snake-segment");Array.from(e).forEach((function(e){e.remove()}))},s=function(){console.log("GAME OVER!"),(u=new o).createBabySnake(),c(),a(u.segments)};document.body.onkeyup=function(e){var t,n,o,r;"Space"===e.code&&(console.log("STARTING GAME"),console.log("creating snake"),u.createBabySnake(),a(u.segments),console.log("creating food"),t=d.x,n=d.y,o=document.querySelector(".game-container"),(r=document.createElement("div")).classList.add("food"),r.style.left=t+"px",r.style.top=n+"px",o.appendChild(r),document.querySelector(".title-screen").style.display="none",document.querySelector(".game-container").style.display="block",u.moving=!0,setInterval(i,l))};var l=200,u=new o,d=new r}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NsYXNzZXMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4udHMiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJzZWdtZW50cyIsIm1vdmluZyIsIm9yaWVudGF0aW9uIiwiZHgiLCJkeSIsImNyZWF0ZUJhYnlTbmFrZSIsInB1c2giLCJtb3ZlIiwibmV3SGVhZExvY2F0aW9uIiwibWFwIiwidW5zaGlmdCIsInNsaWNlIiwiY2hlY2tDb2xsaXNpb24iLCJoZWFkIiwiY2hhbmdlT3JpZW50YXRpb24iLCJldiIsImNvZGUiLCJjb25zb2xlIiwibG9nIiwiZ3Jvd1NuYWtlIiwieCIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsInkiLCJjcmVhdGVOZXdGb29kIiwiZ2FtZUxvb3AiLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJzbmFrZSIsInB1cmdlU25ha2VzIiwiZHJhd1NuYWtlU2VnbWVudHMiLCJnYW1lT3ZlciIsInNuYWtlU2VnbWVudHMiLCJncmlkIiwicXVlcnlTZWxlY3RvciIsImZvckVhY2giLCJzbmFrZVNlZ21lbnQiLCJuZXdTZWdtZW50IiwiY3JlYXRlRWxlbWVudCIsImNsYXNzTGlzdCIsImFkZCIsInN0eWxlIiwibGVmdCIsInRvcCIsImFwcGVuZENoaWxkIiwiYWxsU2VnbWVudHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiQXJyYXkiLCJmcm9tIiwidGFyZ2V0U2VnbWVudCIsInJlbW92ZSIsIlNuYWtlIiwiYm9keSIsIm9ua2V5dXAiLCJlIiwibmV3Rm9vZCIsImZvb2QiLCJkaXNwbGF5Iiwic2V0SW50ZXJ2YWwiLCJnbG9iYWxUaW1lciIsIkZvb2QiXSwibWFwcGluZ3MiOiJhQUNFLElBQUlBLEVBQW1CLEdBR3ZCLFNBQVNDLEVBQW9CQyxHQUc1QixHQUFHRixFQUFpQkUsR0FDbkIsT0FBT0YsRUFBaUJFLEdBQVVDLFFBR25DLElBQUlDLEVBQVNKLEVBQWlCRSxHQUFZLENBQ3pDRyxFQUFHSCxFQUNISSxHQUFHLEVBQ0hILFFBQVMsSUFVVixPQU5BSSxFQUFRTCxHQUFVTSxLQUFLSixFQUFPRCxRQUFTQyxFQUFRQSxFQUFPRCxRQUFTRixHQUcvREcsRUFBT0UsR0FBSSxFQUdKRixFQUFPRCxRQUtmRixFQUFvQlEsRUFBSUYsRUFHeEJOLEVBQW9CUyxFQUFJVixFQUd4QkMsRUFBb0JVLEVBQUksU0FBU1IsRUFBU1MsRUFBTUMsR0FDM0NaLEVBQW9CYSxFQUFFWCxFQUFTUyxJQUNsQ0csT0FBT0MsZUFBZWIsRUFBU1MsRUFBTSxDQUFFSyxZQUFZLEVBQU1DLElBQUtMLEtBS2hFWixFQUFvQmtCLEVBQUksU0FBU2hCLEdBQ1gsb0JBQVhpQixRQUEwQkEsT0FBT0MsYUFDMUNOLE9BQU9DLGVBQWViLEVBQVNpQixPQUFPQyxZQUFhLENBQUVDLE1BQU8sV0FFN0RQLE9BQU9DLGVBQWViLEVBQVMsYUFBYyxDQUFFbUIsT0FBTyxLQVF2RHJCLEVBQW9Cc0IsRUFBSSxTQUFTRCxFQUFPRSxHQUV2QyxHQURVLEVBQVBBLElBQVVGLEVBQVFyQixFQUFvQnFCLElBQy9CLEVBQVBFLEVBQVUsT0FBT0YsRUFDcEIsR0FBVyxFQUFQRSxHQUE4QixpQkFBVkYsR0FBc0JBLEdBQVNBLEVBQU1HLFdBQVksT0FBT0gs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UUFBVSxRQUMzQjdCLEVBQU01QixRQUFTLEVBRWYwRCxZQUFZakMsRUFBVWtDLEtBSTlCLElBQUlBLEVBQXNCLElBQ3RCL0IsRUFBUSxJQUFJdUIsRUFDWkssRUFBTyxJQUFJSSIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDApO1xuIiwiLy9TbmFrZSBjbGFzc1xyXG5leHBvcnQgY2xhc3MgU25ha2Uge1xyXG4gICAgc2VnbWVudHM6IG51bWJlcltdW10gPSBbXTtcclxuICAgIG1vdmluZzogYm9vbGVhbiA9IGZhbHNlO1xyXG4gICAgb3JpZW50YXRpb246IHN0cmluZyA9ICdob3Jpem9udGFsJztcclxuICAgIGR4OiBudW1iZXIgPSAxMDtcclxuICAgIGR5OiBudW1iZXIgPSAwO1xyXG5cclxuICAgIGNyZWF0ZUJhYnlTbmFrZSA9ICgpID0+IHtcclxuICAgICAgICB0aGlzLnNlZ21lbnRzLnB1c2goWzMwLCAxMF0pO1xyXG4gICAgICAgIHRoaXMuc2VnbWVudHMucHVzaChbMjAsIDEwXSk7XHJcbiAgICAgICAgdGhpcy5zZWdtZW50cy5wdXNoKFsxMCwgMTBdKTtcclxuICAgICAgICB0aGlzLm1vdmluZyA9IHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgbW92ZSA9ICgpID0+IHtcclxuICAgICAgICBsZXQgbmV3SGVhZExvY2F0aW9uOiBudW1iZXJbXSA9IHRoaXMuc2VnbWVudHNbMF0ubWFwKGkgPT4ge1xyXG4gICAgICAgICAgICByZXR1cm4gaVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGlmICh0aGlzLm9yaWVudGF0aW9uID09PSAnaG9yaXpvbnRhbCcpIHtcclxuICAgICAgICAgICAgbmV3SGVhZExvY2F0aW9uWzBdICs9IHRoaXMuZHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKHRoaXMub3JpZW50YXRpb24gPT09ICd2ZXJ0aWNhbCcpIHtcclxuICAgICAgICAgICAgbmV3SGVhZExvY2F0aW9uWzFdICs9IHRoaXMuZHk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuc2VnbWVudHMudW5zaGlmdChuZXdIZWFkTG9jYXRpb24pO1xyXG4gICAgICAgIHRoaXMuc2VnbWVudHMgPSB0aGlzLnNlZ21lbnRzLnNsaWNlKDAsIC0xKTtcclxuICAgIH1cclxuXHJcbiAgICBjaGVja0NvbGxpc2lvbiA9ICgpID0+IHtcclxuICAgICAgICBjb25zdCBoZWFkOiBudW1iZXJbXSA9IHRoaXMuc2VnbWVudHNbMF07XHJcbiAgICAgICAgaWYgKGhlYWRbMF0gPCAtMTAgfHwgaGVhZFswXSA+IDQ5MCB8fCBoZWFkWzFdID4gNDkwIHx8IGhlYWRbMV0gPCAtMTApIHtcclxuICAgICAgICAgICAgdGhpcy5tb3ZpbmcgPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgY2hhbmdlT3JpZW50YXRpb24gPSAoZXYpID0+IHtcclxuICAgICAgICBsZXQgZGlyZWN0aW9uOiBzdHJpbmcgPSBldi5jb2RlO1xyXG4gICAgICAgIHN3aXRjaCAoZGlyZWN0aW9uKSB7XHJcbiAgICAgICAgICAgIGNhc2UgXCJBcnJvd1JpZ2h0XCI6XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5keCA9PT0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZHggPSAxMDtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmR5ID0gMDtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLm9yaWVudGF0aW9uID0gJ2hvcml6b250YWwnO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgYnJlYWtcclxuICAgICAgICAgICAgY2FzZSBcIkFycm93TGVmdFwiOlxyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZHggPT09IDApIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmR4ID0gLTEwXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5keSA9IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5vcmllbnRhdGlvbiA9ICdob3Jpem9udGFsJztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGJyZWFrXHJcbiAgICAgICAgICAgIGNhc2UgXCJBcnJvd0Rvd25cIjpcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmR5ID09PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5keCA9IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5keSA9IDEwO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMub3JpZW50YXRpb24gPSAndmVydGljYWwnO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgYnJlYWtcclxuICAgICAgICAgICAgY2FzZSBcIkFycm93VXBcIjpcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmR5ID09PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5keCA9IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5keSA9IC0xMDtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLm9yaWVudGF0aW9uID0gJ3ZlcnRpY2FsJztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGJyZWFrXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnNvbGUubG9nKHRoaXMuZHgsIHRoaXMuZHkpO1xyXG4gICAgfVxyXG5cclxuICAgIGdyb3dTbmFrZSA9ICgpID0+IHtcclxuICAgICAgICAvL3doZW4gc25ha2UgaGFzIGVhdGVuIHNvbWV0aGluZ1xyXG4gICAgICAgIC8vXHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5leHBvcnQgY2xhc3MgRm9vZCB7XHJcbiAgICB4OiBudW1iZXIgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqKDQ4MCAtMjAgKyAxKSkrMjA7XHJcbiAgICB5OiBudW1iZXIgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqKDQ4MCAtMjAgKyAxKSkrMjA7XHJcblxyXG4gICAgY3JlYXRlTmV3Rm9vZCA9ICgpID0+IHtcclxuICAgICAgICAvLy9VcGRhdGUgdG8gZW5zdXJlIG5vdCBjcmVhdGVkIGluc2lkZSBzbmFrZSFcclxuXHJcbiAgICAgICAgdGhpcy54ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKig0ODAgLTIwICsgMSkpKzIwO1xyXG4gICAgICAgIHRoaXMueSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSooNDgwIC0yMCArIDEpKSsyMDtcclxuICAgIH1cclxufSIsImltcG9ydCB7IFNuYWtlIH0gZnJvbSBcIi4vY2xhc3Nlc1wiO1xyXG5pbXBvcnQgeyBGb29kIH0gZnJvbSBcIi4vY2xhc3Nlc1wiO1xyXG5jb25zb2xlLmxvZygnSkFNRVMnKTtcclxuXHJcbi8vIERPTSBGVU5DVElPTlNcclxuY29uc3QgZ2FtZUxvb3AgPSAoKSA9PiB7XHJcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5dXBcIiwgc25ha2UuY2hhbmdlT3JpZW50YXRpb24pO1xyXG4gICAgc25ha2UubW92ZSgpO1xyXG4gICAgcHVyZ2VTbmFrZXMoKTtcclxuICAgIGRyYXdTbmFrZVNlZ21lbnRzKHNuYWtlLnNlZ21lbnRzKTtcclxuICAgIHNuYWtlLmNoZWNrQ29sbGlzaW9uKCk7XHJcbiAgICAvL0NIRUNLIEVBVElORyBIRVJFXHJcbiAgICAvL0dST1cgSEVSRVxyXG4gICAgaWYgKHNuYWtlLm1vdmluZyA9PT0gZmFsc2UpIHtcclxuICAgICAgICBnYW1lT3ZlcigpO1xyXG4gICAgfVxyXG59XHJcblxyXG5jb25zdCBkcmF3U25ha2VTZWdtZW50cyA9IChzbmFrZVNlZ21lbnRzKSA9PiB7XHJcbiAgICBsZXQgZ3JpZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5nYW1lLWNvbnRhaW5lcicpO1xyXG4gICAgc25ha2VTZWdtZW50cy5mb3JFYWNoKHNuYWtlU2VnbWVudCA9PiB7XHJcbiAgICAgICAgbGV0IG5ld1NlZ21lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICBuZXdTZWdtZW50LmNsYXNzTGlzdC5hZGQoJ3NuYWtlLXNlZ21lbnQnKTtcclxuICAgICAgICBuZXdTZWdtZW50LnN0eWxlLmxlZnQgPSBzbmFrZVNlZ21lbnRbMF0gKyAncHgnO1xyXG4gICAgICAgIG5ld1NlZ21lbnQuc3R5bGUudG9wID0gc25ha2VTZWdtZW50WzFdICsgJ3B4JztcclxuICAgICAgICBncmlkLmFwcGVuZENoaWxkKG5ld1NlZ21lbnQpO1xyXG4gICAgfSlcclxufVxyXG5cclxuY29uc3QgcHVyZ2VTbmFrZXMgPSAoKSA9PiB7XHJcbiAgICBjb25zdCBhbGxTZWdtZW50czogTm9kZUxpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuc25ha2Utc2VnbWVudCcpO1xyXG4gICAgQXJyYXkuZnJvbShhbGxTZWdtZW50cykuZm9yRWFjaCgodGFyZ2V0U2VnbWVudDogRWxlbWVudCkgPT4ge1xyXG4gICAgICAgIHRhcmdldFNlZ21lbnQucmVtb3ZlKCk7XHJcbiAgICB9KVxyXG59XHJcblxyXG5jb25zdCBkcmF3Rm9vZCA9ICh4LCB5KSA9PiB7XHJcbiAgICBsZXQgZ3JpZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5nYW1lLWNvbnRhaW5lcicpO1xyXG4gICAgbGV0IG5ld0Zvb2QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIG5ld0Zvb2QuY2xhc3NMaXN0LmFkZCgnZm9vZCcpO1xyXG4gICAgbmV3Rm9vZC5zdHlsZS5sZWZ0ID0geCArJ3B4JztcclxuICAgIG5ld0Zvb2Quc3R5bGUudG9wID0geSArJ3B4JztcclxuICAgIGdyaWQuYXBwZW5kQ2hpbGQobmV3Rm9vZCk7XHJcbn1cclxuXHJcbmNvbnN0IGdhbWVPdmVyID0gKCkgPT4ge1xyXG4gICAgY29uc29sZS5sb2coJ0dBTUUgT1ZFUiEnKTtcclxuICAgIHNuYWtlID0gbmV3IFNuYWtlO1xyXG4gICAgc25ha2UuY3JlYXRlQmFieVNuYWtlKCk7XHJcbiAgICBwdXJnZVNuYWtlcygpO1xyXG4gICAgZHJhd1NuYWtlU2VnbWVudHMoc25ha2Uuc2VnbWVudHMpO1xyXG59XHJcblxyXG4vL1N0YXJ0IGdhbWVcclxuZG9jdW1lbnQuYm9keS5vbmtleXVwID0gZnVuY3Rpb24gKGUpIHtcclxuICAgIGlmIChlLmNvZGUgPT09ICdTcGFjZScpIHtcclxuICAgICAgICBjb25zb2xlLmxvZygnU1RBUlRJTkcgR0FNRScpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdjcmVhdGluZyBzbmFrZScpXHJcbiAgICAgICAgc25ha2UuY3JlYXRlQmFieVNuYWtlKCk7XHJcbiAgICAgICAgZHJhd1NuYWtlU2VnbWVudHMoc25ha2Uuc2VnbWVudHMpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdjcmVhdGluZyBmb29kJyk7XHJcbiAgICAgICAgZHJhd0Zvb2QoZm9vZC54LCBmb29kLnkpO1xyXG4gICAgICAgIGxldCB0aXRsZSA9IDxIVE1MRWxlbWVudD5kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudGl0bGUtc2NyZWVuJyk7XHJcbiAgICAgICAgdGl0bGUuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICBsZXQgZ2FtZVNjcmVlbiA9IDxIVE1MRWxlbWVudD5kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZ2FtZS1jb250YWluZXInKTtcclxuICAgICAgICBnYW1lU2NyZWVuLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG4gICAgICAgIHNuYWtlLm1vdmluZyA9IHRydWU7XHJcbiAgICAgICAgLy9Jbml0aWFsaXNlIG1haW4gZ2FtZSBsb29wIC0gYnJlYWtzIHVwb24gZGVhdGhcclxuICAgICAgICBzZXRJbnRlcnZhbChnYW1lTG9vcCwgZ2xvYmFsVGltZXIpO1xyXG4gICAgfVxyXG59XHJcblxyXG5sZXQgZ2xvYmFsVGltZXI6IG51bWJlciA9IDIwMDtcclxubGV0IHNuYWtlID0gbmV3IFNuYWtlO1xyXG5sZXQgZm9vZCA9IG5ldyBGb29kOyJdLCJzb3VyY2VSb290IjoiIn0=